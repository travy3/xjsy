<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zyu.xjsy.modules.sys.dao.UserDao">
    <resultMap id="userResult" type="User">
        <id property="id" column="id"></id>
        <result property="name" column="name"></result>
        <result property="loginName" column="loginName"></result>
        <result property="password" column="password"></result>
        <result property="email" column="email"></result>
        <result property="mobile" column="mobile"></result>
        <result property="remarks" column="remarks"></result>
        <result property="loginFlag" column="loginflag"></result>
        <result property="createDate" column="createDate"></result>
        <result property="business.id" column="business.id"></result>
        <result property="business.name" column="business.name"></result>
        <result property="deadLine" column="deadLine"></result>
        <collection property="roleList" ofType="Role">
            <id property="id" column="role.id"></id>
            <result property="name" column="role.name"></result>
        </collection>
    </resultMap>
    <sql id="userColumns">
        u.id,
        u.real_name AS 'name',
        u.login_name AS 'loginName',
        u.password,
        u.email,
        u.mobile,
        u.remarks,
        u.delflag,
        u.loginflag,
        u.create_by AS 'createBy.id',
        u.create_date AS 'createDate',
        u.update_by AS 'updateBy.id',
        u.update_date AS 'updateDate',
        u.business AS 'business.id',
        u.deadline AS 'deadLine',
        b.name AS 'business.name',
        r.id AS 'role.id',
        r.name AS 'role.name'
    </sql>

    <sql id="userJoin">
        JOIN sys_business b on u.business = b.id
        LEFT JOIN sys_user_role ur on ur.user_id = u.id
        JOIN sys_role r on r.id = ur.role_id
    </sql>

    <select id="findList" resultMap="userResult">
        SELECT
        <include refid="userColumns"/>
        FROM sys_user u
        <include refid="userJoin" />
        WHERE u.delflag = #{DEL_FLAG_NORMAL}
        <if test="loginName != null and loginName != ''">
            AND u.login_name=#{loginName}
        </if>
        <if test="name != null and name != ''">
            AND u.real_name=#{name}
        </if>
    </select>

    <select id="get" resultMap="userResult">
        SELECT
        <include refid="userColumns"></include>
        FROM sys_user u
        <include refid="userJoin" />
        WHERE u.delflag = #{DEL_FLAG_NORMAL} AND u.id = #{id}
    </select>

    <select id="getByLoginName" resultMap="userResult">
        SELECT
        <include refid="userColumns"></include>
        FROM sys_user u
        <include refid="userJoin" />
        WHERE u.delflag = #{DEL_FLAG_NORMAL} AND u.login_name=#{loginName}
    </select>

    <!-- 删除用户和角色关联表数据 -->
    <delete id="deleteUserRole">
        DELETE FROM sys_user_role WHERE user_id = #{id}
    </delete>

    <insert id="insertUserRole">
        INSERT INTO  sys_user_role(user_id,role_id)
        <foreach collection="roleList" item="role" separator=" union all ">
            SELECT #{id}, #{role.id} FROM dual
        </foreach>
    </insert>


    <insert id="insert">
        INSERT  INTO sys_user(
        id,
        login_name,
        password,
        real_name,
        mobile,
        email,
        remarks,
        delflag,
        business,
        create_by,
        create_date,
        update_by,
        update_date,
        loginflag
        ) VALUES (
        #{id},
        #{loginName},
        #{password},
        #{name},
        #{mobile},
        #{email},
        #{remarks},
        #{delFlag},
        #{business.id},
        #{createBy.id},
        #{createDate},
        #{updateBy.id},
        #{updateDate},
        #{loginFlag}
        )
    </insert>

    <update id="update">
        UPDATE sys_user SET
          business = #{business.id},
          login_name = #{loginName},
          <if test="newPassword != null and newPassword != ''">
              password = #{password},
          </if>
          real_name = #{name},
          email = #{email},
          mobile = #{mobile},
          update_by = #{updateBy.id},
          update_date = #{updateDate},
          remarks = #{remarks},
          loginflag = #{loginFlag}
          WHERE id= #{id}
    </update>

    <!-- 逻辑删除用户 -->
    <update id="delete">
        UPDATE sys_user SET
        delflag = #{DEL_FLAG_DELETE}
        WHERE id = #{id}
    </update>





</mapper>